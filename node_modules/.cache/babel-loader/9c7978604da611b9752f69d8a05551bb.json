{"ast":null,"code":"var _jsxFileName = \"/Users/minhyeok/Documents/Documents/Gachon/Mobile Web/practice/src/chapter_12/Calculator2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TemperatureInput from \"./TemperatureInput\";\nimport BoilingVerdict from \"./BoilingVerdict\";\nimport tryConvert from \"./tryConvert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calculator2(props) {\n  _s();\n\n  const [temperature, setTemperature] = useState('');\n  const [scale, setScale] = useState('c');\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n\n  const handleCelsiusChange = temperature => {\n    setTemperature(temperature);\n    setScale('c');\n  };\n\n  const handleFahrenheitChange = temperature => {\n    setTemperature(temperature);\n    setScale('f');\n  };\n\n  const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n  const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"// \\uAC01 \\uB2E8\\uC704\\uB85C \\uBCC0\\uD658\\uB41C \\uC628\\uB3C4 \\uAC12\\uACFC \\uB2E8\\uC704\\uB97C Props \\uAC12\\uC5D0 \\uB123\\uC5B4\\uC90C // \\uAC12\\uC774 \\uBCC0\\uACBD\\uB420 \\uB54C Update\\uD558\\uAE30 \\uC704\\uD55C \\uD568\\uC218\\uB294 onTemperatureChange\\uC5D0 \\uB123\\uC5B4\\uC90C // \\uC12D\\uC528\\uC628\\uB3C4\\uAC00 \\uBCC0\\uACBD\\uB418\\uBA74 \\uB2E8\\uC704\\uAC00 C // \\uD654\\uC528\\uC628\\uB3C4\\uAC00 \\uBCC0\\uACBD\\uB418\\uBA74 \\uB2E8\\uC704\\uAC00 f\", /*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"c\",\n      temperature: celsius,\n      onTemperatureChange: handleCelsiusChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"f\",\n      temperature: fahrenheit,\n      onTemperatureChange: handleFahrenheitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n      celsius: parseFloat(celsius)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Calculator2, \"WTiyy6IxvIV6eHx+SEfr3CG/my0=\");\n\n_c = Calculator2;\nexport default Calculator2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator2\");","map":{"version":3,"names":["React","useState","TemperatureInput","BoilingVerdict","tryConvert","Calculator2","props","temperature","setTemperature","scale","setScale","output","convert","input","rounded","Math","round","toString","handleCelsiusChange","handleFahrenheitChange","celsius","toCelsius","fahrenheit","toFahrenheit","parseFloat"],"sources":["/Users/minhyeok/Documents/Documents/Gachon/Mobile Web/practice/src/chapter_12/Calculator2.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport TemperatureInput from \"./TemperatureInput\";\nimport BoilingVerdict from \"./BoilingVerdict\";\nimport tryConvert from \"./tryConvert\";\n\nfunction Calculator2(props) {\n\tconst [temperature, setTemperature] = useState('');\n  \tconst [scale, setScale] = useState('c');\n  \n\tconst output = convert(input);\n\tconst rounded = Math.round(output * 1000) / 1000;\n\treturn rounded.toString();\n\n  \tconst handleCelsiusChange = (temperature) => {\n      \tsetTemperature(temperature);\n      \tsetScale('c');\n    }\n    \n    const handleFahrenheitChange = (temperature) => {\n      \tsetTemperature(temperature);\n      \tsetScale('f');\n    }\n    \n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n  \tconst fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n  \n  \treturn (\n      \t<div>\n      \t\t// 각 단위로 변환된 온도 값과 단위를 Props 값에 넣어줌\n      \t\t// 값이 변경될 때 Update하기 위한 함수는 onTemperatureChange에 넣어줌\n      \t\t// 섭씨온도가 변경되면 단위가 C\n      \t\t// 화씨온도가 변경되면 단위가 f\n      \t\t<TemperatureInput\n      \t\t\tscale=\"c\"\n      \t\t\ttemperature={celsius}\n\t\t\t\tonTemperatureChange={handleCelsiusChange} />\n            <TemperatureInput\n\t\t\t\tscale=\"f\"\n\t\t\t\ttemperature={fahrenheit}\n\t\t\t\tonTemperatureChange={handleFahrenheitChange} />\n             <BoilingVerdict\n\t\t\t\tcelsius={parseFloat(celsius)} />\n         </div>\n    );\n}\n\nexport default Calculator2;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EAC3B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;EACE,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,GAAD,CAAlC;EAEF,MAAMU,MAAM,GAAGC,OAAO,CAACC,KAAD,CAAtB;EACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,GAAG,IAApB,IAA4B,IAA5C;EACA,OAAOG,OAAO,CAACG,QAAR,EAAP;;EAEE,MAAMC,mBAAmB,GAAIX,WAAD,IAAiB;IACzCC,cAAc,CAACD,WAAD,CAAd;IACAG,QAAQ,CAAC,GAAD,CAAR;EACF,CAHF;;EAKC,MAAMS,sBAAsB,GAAIZ,WAAD,IAAiB;IAC7CC,cAAc,CAACD,WAAD,CAAd;IACAG,QAAQ,CAAC,GAAD,CAAR;EACF,CAHD;;EAKA,MAAMU,OAAO,GAAGX,KAAK,KAAK,GAAV,GAAgBL,UAAU,CAACG,WAAD,EAAcc,SAAd,CAA1B,GAAqDd,WAArE;EACD,MAAMe,UAAU,GAAGb,KAAK,KAAK,GAAV,GAAgBL,UAAU,CAACG,WAAD,EAAcgB,YAAd,CAA1B,GAAwDhB,WAA3E;EAEA,oBACI;IAAA,wcAKC,QAAC,gBAAD;MACC,KAAK,EAAC,GADP;MAEC,WAAW,EAAEa,OAFd;MAGJ,mBAAmB,EAAEF;IAHjB;MAAA;MAAA;MAAA;IAAA,QALD,eASK,QAAC,gBAAD;MACR,KAAK,EAAC,GADE;MAER,WAAW,EAAEI,UAFL;MAGR,mBAAmB,EAAEH;IAHb;MAAA;MAAA;MAAA;IAAA,QATL,eAaM,QAAC,cAAD;MACT,OAAO,EAAEK,UAAU,CAACJ,OAAD;IADV;MAAA;MAAA;MAAA;IAAA,QAbN;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBF;;GAvCQf,W;;KAAAA,W;AAyCT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}