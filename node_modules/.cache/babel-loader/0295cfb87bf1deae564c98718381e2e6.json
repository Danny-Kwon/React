{"ast":null,"code":"var _jsxFileName = \"/Users/minhyeok/Documents/Documents/Gachon/Mobile Web/practice/src/chapter_12/Calculator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport BoilingVerdict from \"./BoilingVerdict\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calculator(props) {\n  _s();\n\n  const [temperature, setTemperature] = useState('');\n\n  const handleChange = event => {\n    setTemperature(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"\\uC12D\\uC528 \\uC628\\uB3C4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: temperature,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n      celsius: parseFloat(temperature)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Calculator, \"TDuTgmOO2XsErdV0pwyK1c9+7rk=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","BoilingVerdict","Calculator","props","temperature","setTemperature","handleChange","event","target","value","parseFloat"],"sources":["/Users/minhyeok/Documents/Documents/Gachon/Mobile Web/practice/src/chapter_12/Calculator.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport BoilingVerdict from \"./BoilingVerdict\";\n\nfunction Calculator(props) {\n    const [temperature, setTemperature] = useState('');\n    const handleChange = (event) => {\n        setTemperature(event.target.value);\n  }\n  \n  return (\n        <fieldset>\n            <legend>섭씨 온도를 입력하세요:</legend>\n            <input\n                value={temperature}\n                onChange={handleChange} />\n            <BoilingVerdict\n                celsius={parseFloat(temperature)} />\n     </fieldset>\n )\n}\n\nexport default Calculator;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EACvB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;EACA,MAAMM,YAAY,GAAIC,KAAD,IAAW;IAC5BF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACL,CAFC;;EAIF,oBACM;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MACI,KAAK,EAAEL,WADX;MAEI,QAAQ,EAAEE;IAFd;MAAA;MAAA;MAAA;IAAA,QAFJ,eAKI,QAAC,cAAD;MACI,OAAO,EAAEI,UAAU,CAACN,WAAD;IADvB;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADN;AAUD;;GAhBQF,U;;KAAAA,U;AAkBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}